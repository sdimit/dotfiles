# GENERAL OPTIONS {{{

# Note: bind -n maps a key that works all the time, regular bind maps a key that has to be prefixed with the prefix key.
#  -r flag allows to repeat keystroke which invokes modifier each time!

# use CTRL-A as modifier
set-option -g prefix C-a

set -g prefix C-a
unbind C-b

# C-a C-a sends the real C-a, like in screen.
bind C-a send-prefix

# Support for 256 colors
set -g default-terminal "screen-256color"


# Force zsh login
set -g default-shell /bin/zsh
set -g default-command /bin/zsh

# disable sound bell
set -g bell-action none
# disable visual bell
set -g visual-bell off

set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'
# force a reload of the config file
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# large history
set-option -g history-limit 10000

setw -g pane-base-index 1

# speed up 
set-option -s escape-time 0
set -g base-index 1

set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on
set -g mouse-resize-pane on

# bind vi key-mapping
set -g status-keys vi

# }}}

# STATUS BAR {{{
# hide status bar

bind-key c-f set status off

bind : command-prompt

set-window-option -g window-status-current-bg colour234

set -g status-fg blue
set -g status-bg colour234

# Monitor for activity in the window. Windows with activity are highlighted in the status line.
set-window-option -g monitor-activity off
set -g window-status-activity-attr bold

set -g pane-border-fg colour245
set -g pane-active-border-fg colour39

# set -g message-fg colour16
# set -g message-bg colour221
# set -g message-attr bold

# set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) ##[fg=colour238,bg=colour234,nobold]⮀'
# set -g window-status-format "#[fg=white,bg=colour234] #I #W #[fg=colour252,bg=colour238,nobold]⮀"
# set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W ##[fg=colour39,bg=colour234,nobold]⮀"

# set -g status-left ''
# set -g window-status-format "#[fg=white,bg=colour234] #I #W "
# set -g window-status-current-format "#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W "

# TMUX POWER LINE

set-option -g status on # default is on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
set -g status-left ''
set-option -g status-right "#(~/dotfiles/tmux/tmux-powerline/powerline.sh right)"
set-option -g status-left "#(~/dotfiles/tmux/tmux-powerline/powerline.sh left)"

# Show short windows names in status bar
set-window-option -g window-status-format ' #I #W '
set-window-option -g window-status-current-format '|#I #W|'

# }}}

# PANES {{{

bind-key x kill-pane
bind-key C-x kill-pane

# navigate panes with hjkl

bind h select-pane -L
bind c-h select-pane -L
bind j select-pane -D
bind c-j select-pane -D
bind k select-pane -U
bind c-k select-pane -U
bind l select-pane -R
bind c-l select-pane -R

# resize panes like vim

bind -r < resize-pane -L 10 
bind -r L resize-pane -L 100
bind -r > resize-pane -R 10
bind -r R resize-pane -R 100
bind -r - resize-pane -D 5
bind -r D resize-pane -D 36
bind -r + resize-pane -U 5
bind -r U resize-pane -U 35



# rotate current pane
unbind-key o
bind-key -n C-Space select-pane -t :.+

# bind-key C-Space next-layout
# bind C-t select-layout even-horizontal
# bind C-y select-layout even-vertical

#  <c-a> !  - Break current pane into new window
# Maximize and Restore Panes
unbind K
bind K break-pane
unbind J
bind J join-pane

# TODO
# bind c-l swap-pane -U -t 2

# zoom panes
bind o run "if [[ $(tmux list-window) =~ ZOOM ]]; then tmux last-window; tmux swap-pane -s ZOOM.1; tmux kill-window -t ZOOM; else tmux new-window -d -n ZOOM; tmux swap-pane -s ZOOM.1; tmux select-window -t ZOOM;fi"



#  }}}

# WINDOWS  {{{

# don't automatically set window title

# set-window-option -g automatic-rename off
setw -g automatic-rename off



bind C-n next-window
bind C-c new-window

bind-key K kill-window

# Window index base 1
set -g base-index 1
setw -g pane-base-index 1

# DVTM style window selection
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 9

# Window movement
# Only really makes sense if you have your parens bound to shifts
bind -r ( select-window -t :-
bind -r ) select-window -t :+

# rotate windows with c-o (xmonad-style) and also c-r
bind c-r rotate-window

# bind-key -n M-C-h prev
# bind-key -n M-C-l next

# split windows like vim.  
# Note: vim's definition of a horizontal/vertical split is reversed from tmux's

bind-key s   split-window -v
bind-key c-s split-window -v
bind-key v   split-window -h
bind-key c-v split-window -h

# Joining windows
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

# }}}

# SESSIONS {{{

# bind S list-sessions 
bind a choose-session
bind N new

# }}}

# COPY MODE  {{{

set -g default-command "reattach-to-user-namespace -l zsh"

#vi-style controls for copy mode
set-window-option -g mode-keys vi

setw -g mode-keys vi

bind [ copy-mode
bind C-[ copy-mode
unbind p
bind p paste-buffer
bind C-p paste-buffer

bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

#  }}}

# CUSTOMIZATIONS {{{

# split the window with tig status
bind-key t split-window "tig status"
bind-key c-t split-window -h "tig status"
bind-key T split-window -h "tig status"
bind-key f split-window -h "vifm"
bind-key F new-window "vifm"
bind-key m split-window "mutt"
# bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# }}}

# vim: filetype=tmux
